package attachments

/**
 * Видеозапись
 */
data class Video(
    val id: Int, //Идентификатор видеозаписи.
    val ownerId: Int, // Идентификатор владельца видеозаписи.
    val title: String, // Название видеозаписи.
    val description: String, // Текст описания видеозаписи.
    val duration: Int, //Длительность ролика в секундах.
    val image: Array<Image>?, // Изображение обложки. Содержит массив объектов с полями:
    val firstFrame: Array<Image>?, // Изображение первого кадра. Содержит массив объектов с полями:
    val date: Int, // Дата создания видеозаписи в формате Unixtime.
    val addingDate: Int, // Дата добавления видеозаписи пользователем или группой в формате Unixtime.
    val views: Int, // Количество просмотров видеозаписи.
    val localViews: Int, // Если видео внешнее, количество просмотров ВКонтакте.
    val comments: Int, // Количество комментариев к видеозаписи. Поле не возвращается, если комментарии недоступны.
    val player: String, // URL страницы с плеером, который можно использовать для воспроизведения ролика в браузере. Поддерживается flash и HTML5, плеер всегда масштабируется по размеру окна.
    val platform: String, // Название платформы (для видеозаписей, добавленных с внешних сайтов).
    val canAdd: Int, // Может ли пользователь добавить видеозапись к себе: 0 — не может добавить, 1 — может добавить.
    val isPrivate: Int, // Поле возвращается, если видеозапись приватная (например, была загружена в личное сообщение), всегда содержит 1.
    val accessKey: String, // Ключ доступа к объекту. Подробнее см. Ключ доступа к данным access_key.
    val processing: Int, // Поле возвращается в том случае, если видеоролик находится в процессе обработки, всегда содержит 1.
    val isFavorite: Boolean, // true, если объект добавлен в закладки у текущего пользователя.
    val canComment: Int, // Может ли пользователь комментировать видео: 0 — не может комментировать, 1 — может комментировать.
    val canEdit: Int, // Может ли пользователь редактировать видео: 0 — не может редактировать, 1 — может редактировать.
    val canLike: Int, // Может ли пользователь добавить видео в список <<Мне нравится>>: 0 — не может добавить, 1 — может добавить.
    val canRepost: Int, // Может ли пользователь сделать репост видео: 0 — не может сделать репост, 1 — может сделать репост.
    val canSubscribe: Int, // Может ли пользователь подписаться на автора видео: 0 — не может подписаться, 1 — может подписаться.
    val canAddToFaves: Int, // Может ли пользователь добавить видео в избранное: 0 — не может добавить, 1 — может добавить.
    val canAttachLink: Int, // Может ли пользователь прикрепить кнопку действия к видео: 0 — не может прикрепить, 1 — может прикрепить.
    val width: Int, // Ширина видео.
    val height: Int, // Высота видео.
    val userId: Int, // Идентификатор пользователя, загрузившего видео, если оно было загружено в группу одним из участников.
    val converting: Int, // Конвертируется ли видео: 0 — не конвертируется, 1 — конвертируется.
    val added: Int, // Добавлено ли видео в альбомы пользователя: 0 — не добавлено, 1 — добавлено.
    val isSubscribed: Int, // Подписан ли пользователь на автора видео: 0 — не подписан, 1 — подписан.
    val repeat: Int, // Поле возвращается в том случае, если видео зациклено, всегда содержит 1
    val type: String, // Тип видеозаписи. Может принимать значения: video, music_video, movie.
    val balance: Int, // Баланс донатов в прямой трансляции.
    val liveStatus: String, // Статус прямой трансляции. Может принимать значения: waiting, started, finished, failed, upcoming.
    val live: Int, // Поле возвращается в том случае, если видеозапись является прямой трансляцией, всегда содержит 1. Обратите внимание, в этом случае в поле duration содержится значение 0.
    val upcoming: Int, // Поле свидетельствует о том, что трансляция скоро начнётся. Для live =1.
    val spectators: Int, // Количество зрителей прямой трансляции.
    val likes: Array<Like>, // Содержит объект отметки «Мне нравится»
    val reposts: Repost // Содержит объект репоста.
)

data class Image(
    val heightVal: Int, // высота изображения.
    val url: String, // ссылка на изображение.
    val width: Int, // ширина изображения.
    val withPadding: Int // поле возвращается, если изображение с отбивкой, всегда содержит 1.
)

data class Like(
    val count: Int, // количество лайков.
    val userLikes: Int // добавлено ли видео в список «Мне нравится» текущего пользователя: 0 — не добавлено, 1 — добавлено.
)

data class Repost(
    val count: Int, // счетчик общего количества репостов. Содержит сумму репостов на стену и в личные сообщения.
    val wallCount: Int, // счетчик репостов на стену.
    val mailCount: Int, // счетчик репостов в личные сообщения.
    val userReposted: Int // информация о том, сделал ли текущий пользователь репост этого видео.
)

data class AttachmentVideo(val video: Video) : Attachment("video")